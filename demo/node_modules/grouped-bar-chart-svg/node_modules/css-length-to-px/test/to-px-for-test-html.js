"use strict";

var firstDiv;

/**
 * @desc: convert a css length value to pixels
 */
function toPx(valToConvert /*: string */, elem /*: object */, prop /*:string */) /*: number */ {
    if (valToConvert == Number.parseFloat(valToConvert)) {
        return valToConvert;
    }

    elem = elem || firstDiv ||Â (firstDiv = document.body.getElementsByTagName("div")[0]);
    prop = prop || "width";

    var style, inlineValue, ret;

    //begin "the awesome hack by Dean Edwards"
    //@see http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

    //remember the current style
    style = elem.style;
    inlineValue = style[prop];

    try {
        style[prop] = valToConvert;
    } catch(e) {
        // IE 8 and below throw an exception when setting unsupported units
        return 0;
    }

    //if style is nothing we probably set an unsupported unit
    ret = !style[prop] ? 0 : Math.round(parseFloat(curCSS(elem, prop)));

    //reset the style back to what it was or blank it out
    style[prop] = inlineValue !== undefined ? inlineValue : null;

    return ret;
}

//return the computed value of a CSS prop of the elem
function curCSS(elem /*: object */, prop /*: string */) {
    const runit = /^(-?[\d+\.\-]+)([a-z]+|%)$/i;

    var value, pixel, unit;

    if (getComputedStyle) {
        //FireFox, Chrome/Safari, Opera and IE9+
        value = getComputedStyle(elem)[prop];
    } else if (pixel = elem.style["pixel" + prop.charAt(0).toUpperCase() + prop.slice(1)]) {
        //IE and Opera support pixel shortcuts for top, bottom, left, right, height, width
        //WebKit supports pixel shortcuts only when an absolute unit is used
        value = pixel;
    } else if (prop === "fontSize") {
        //correct IE issues with font-size
        //@see http://bugs.jquery.com/ticket/760
        value = toPx(elem, "1em", "left", 1);
    } else {
        //IE 8 and below return the specified style
        value = elem.currentStyle[prop];
    }

    //check the unit
    unit = (value.match(runit)||[])[2];
    if ((value === "auto" || (unit && unit !== "px")) && getComputedStyle) {
        //WebKit and Opera will return auto in some cases
        //Firefox will pass back an unaltered value when it cannot be set, like top on a static element
        value = 0;
    } else if (unit && unit !== "px" && !getComputedStyle) {
        //IE 8 and below will not convert units for us
        //try to convert using a prop that will return pixels
        //this will be accurate for everything (except font-size and some percentages)
        value = toPx(elem, value);
    }
    return value;
}

module.exports = toPx;
